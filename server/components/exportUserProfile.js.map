{"version":3,"sources":["components/exportUserProfile.js"],"names":["TEMPLATE_PATH","__dirname","_sortResults","arr","field","asc","sort","el1","el2","_getPeriodDateDescription","startDate","endDate","monthEnd","yearEnd","monthStart","yearStart","months","dateFormated","getMonth","getFullYear","_getSkillDescription","skill","name","experienceYears","skillFromated","_getLanguageDescription","language","level","languageLevels","_setPeriodDate","forEach","exp","periodDate","_getResumeInfo","user","experiences","skillsCloud","aboutMe","summaryOfQualification","certifications","languageSkills","education","avenueCodeExperiences","filter","isAvenueCode","otherExperiences","ACdate","length","description","displayName","skills","groupedExperiences","ac","others","showEducationSection","showSummaryOfQualificationSection","showCertificationSection","showExperienceSection","showSkillCloudSection","showLanguageSkillSection","showAvenueCodeLabelExperienceSection","exportToDocx","template","readFileSync","zip","docx","loadZip","setData","render","getZip","generate","type"],"mappings":"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","file":"components/exportUserProfile.js","sourcesContent":["'use strict';\r\n\r\nimport JSZip from 'jszip';\r\nimport Docx from 'docxtemplater';\r\nimport fs from 'fs';\r\n\r\nconst TEMPLATE_PATH = `${__dirname}/../views/resume/template.docx`;\r\n\r\nfunction _sortResults(arr, field, asc) {\r\n  arr = arr.sort((el1, el2) => {\r\n    if (asc) {\r\n      return (el1[field] > el2[field]) ? 1 : ((el1[field] < el2[field]) ? -1 : 0);\r\n    } else {\r\n      return (el2[field] > el1[field]) ? 1 : ((el2[field] < el1[field]) ? -1 : 0);\r\n    }\r\n  });\r\n}\r\n\r\nfunction _getPeriodDateDescription(startDate, endDate) {\r\n  let monthEnd, yearEnd, monthStart, yearStart;\r\n  let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n  let dateFormated = '';\r\n\r\n  if (startDate) {\r\n    monthStart = startDate.getMonth();\r\n    yearStart = startDate.getFullYear();\r\n\r\n    if (endDate) {\r\n      monthEnd = endDate.getMonth();\r\n      yearEnd = endDate.getFullYear();\r\n\r\n      dateFormated = yearStart === yearEnd ?\r\n        `${months[monthStart]} - ${months[monthEnd]} ${yearStart}` :\r\n        `${months[monthStart]} ${yearStart} - ${months[monthEnd]} ${yearEnd}`;\r\n    } else {\r\n      dateFormated = `Since ${months[monthStart]} ${yearStart}`;\r\n    }\r\n  }\r\n\r\n  return dateFormated;\r\n}\r\n\r\nfunction _getSkillDescription(skill) {\r\n  let {name, experienceYears} = skill;\r\n  let skillFromated = skill.experienceYears > 1 ?\r\n    `${experienceYears} years experience: ${name}` :\r\n    `${experienceYears} year experience: ${name}`;\r\n\r\n  return skillFromated;\r\n}\r\n\r\nfunction _getLanguageDescription(language) {\r\n  let {name, level} = language;\r\n  let languageLevels = ['Elementary Proficiency', 'Limited Working Proficiency',\r\n    'Minimum Professional Proficiency', 'Full Professional Proficiency', 'Native or Bilingual'];\r\n\r\n    return `${name}: ${languageLevels[level-1]}`;\r\n}\r\n\r\nfunction _setPeriodDate(arr) {\r\n  arr.forEach(exp => exp.periodDate = _getPeriodDateDescription(exp.startDate, exp.endDate));\r\n}\r\n\r\nfunction _getResumeInfo(user) {\r\n  let { experiences, skillsCloud, aboutMe,\r\n    summaryOfQualification, certifications, languageSkills,\r\n    education, name } = user;\r\n  let avenueCodeExperiences = experiences.filter(exp => exp.isAvenueCode);\r\n  let otherExperiences = experiences.filter(exp => !exp.isAvenueCode);\r\n  let ACdate;\r\n\r\n  _sortResults(avenueCodeExperiences, 'startDate', true);\r\n\r\n  _setPeriodDate(avenueCodeExperiences);\r\n  _setPeriodDate(otherExperiences);\r\n  _setPeriodDate(certifications);\r\n  _setPeriodDate(education);\r\n\r\n  if (avenueCodeExperiences.length) {\r\n    ACdate = avenueCodeExperiences[0].periodDate;\r\n  }\r\n\r\n  skillsCloud.forEach(skill => skill.description = _getSkillDescription(skill));\r\n  languageSkills.forEach(language => language.description = _getLanguageDescription(language));\r\n\r\n  return {\r\n    displayName: name,\r\n    aboutMe,\r\n    summaryOfQualification,\r\n    certifications,\r\n    languageSkills,\r\n    skills: skillsCloud,\r\n    groupedExperiences: {\r\n      ac: avenueCodeExperiences,\r\n      others: otherExperiences\r\n    },\r\n    education,\r\n    ACdate,\r\n    showEducationSection: education.length ? true : false,\r\n    showSummaryOfQualificationSection: summaryOfQualification ? true : false,\r\n    showCertificationSection: certifications.length ? true : false,\r\n    showExperienceSection: experiences.length ? true : false,\r\n    showSkillCloudSection: skillsCloud.length ? true : false,\r\n    showLanguageSkillSection: languageSkills.length ? true : false,\r\n    showAvenueCodeLabelExperienceSection: avenueCodeExperiences.length ? true : false,\r\n  };\r\n}\r\n\r\nfunction exportToDocx(user) {\r\n  let template = fs.readFileSync(TEMPLATE_PATH);\r\n  let zip = new JSZip(template);\r\n  let docx = new Docx().loadZip(zip);\r\n  let {education, experiences, certifications} = user;\r\n\r\n  _sortResults(education, 'startDate', true);\r\n  _sortResults(experiences, 'startDate', false);\r\n  _sortResults(certifications, 'startDate', false);\r\n\r\n  docx.setData(_getResumeInfo(user));\r\n  docx.render();\r\n\r\n  return  docx.getZip().generate({type: 'nodebuffer'});\r\n}\r\n\r\nexport default { exportToDocx };\r\n"],"sourceRoot":"/source/"}