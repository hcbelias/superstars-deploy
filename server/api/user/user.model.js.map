{"version":3,"sources":["api/user/user.model.js"],"names":["Promise","require","authTypes","UserSchema","name","type","String","trim","username","unique","required","email","lowercase","city","currentPosition","currentLocation","role","default","isActive","Boolean","external_id","social","skype","facebook","linkedIn","twitter","provider","salt","google","currentClient","currentProject","hobbies","experiences","position","company","project","client","startDate","Date","skills","Array","endDate","isCurrentPosition","activityDescription","skillsCloud","skill","experienceYears","Number","selfGrade","profileComplete","aboutMe","summaryOfQualification","education","school","degree","field","activities","certifications","authority","languageSkills","level","toJSON","virtuals","virtual","get","getProfilePicture","_id","path","validate","indexOf","length","validatePresenceOf","value","methods","googleData","googleImage","image","profilePicture","url","imagePathRegex","replace","profile","proxyPictureRequest","test","imagePathMatch","match","proxyPictureUrl","model"],"mappings":"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","file":"api/user/user.model.js","sourcesContent":["'use strict';\r\n\r\nimport crypto from 'crypto';\r\nimport mongoose from 'mongoose';\r\nmongoose.Promise = require('bluebird');\r\nimport {Schema} from 'mongoose';\r\nimport config from '../../config/environment';\r\n\r\nconst authTypes = ['github', 'twitter', 'facebook', 'google'];\r\n\r\nvar UserSchema = new Schema({\r\n    name: {\r\n      type: String,\r\n      trim: true\r\n    },\r\n    username: {\r\n      type: String,\r\n      unique: 'Username should be unique',\r\n      required: 'Please fill in a username',\r\n      trim: true\r\n    },\r\n    email: {\r\n      type: String,\r\n      lowercase: true,\r\n      required: true\r\n    },\r\n    city: {\r\n      type: String,\r\n      trim: true\r\n    },\r\n    currentPosition: {\r\n      type: String,\r\n      trim: true\r\n    },\r\n    currentLocation: {\r\n      type: String,\r\n      trim: true\r\n    },\r\n    role: {\r\n      type: String,\r\n      default: 'user'\r\n    },\r\n    isActive: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    external_id: {\r\n      type: String\r\n    },\r\n    social: {\r\n      type: {\r\n        skype: String,\r\n        facebook: String,\r\n        linkedIn: String,\r\n        twitter: String\r\n      },\r\n      default: {}\r\n    },\r\n    provider: String,\r\n    salt: String,\r\n\t  google: {},\r\n    currentClient: {\r\n      type: String\r\n    },\r\n    currentProject: {\r\n      type: String\r\n    },\r\n    hobbies: {\r\n      type: [String],\r\n      default: []\r\n    },\r\n    experiences: {\r\n      type: [{\r\n        position: {\r\n          type: String,\r\n          required: true\r\n        },\r\n        company: {\r\n          type: String,\r\n          required: true\r\n        },\r\n        project: String,\r\n        client: String,\r\n        startDate: {\r\n          type: Date,\r\n          required: true\r\n        },\r\n        skills: {\r\n          type: Array,\r\n          default: []\r\n        },\r\n        endDate: Date,\r\n        isCurrentPosition: Boolean,\r\n        activityDescription: String\r\n      }],\r\n      default: []\r\n    },\r\n    skillsCloud: {\r\n      type: [{\r\n        skill: {\r\n          type: String,\r\n          required: 'Skill Name is a required field.'\r\n        },\r\n        experienceYears: Number,\r\n        selfGrade: Number\r\n      }],\r\n      default: []\r\n    },\r\n    profileComplete: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    aboutMe: {\r\n      type: String\r\n    },\r\n    summaryOfQualification: {\r\n      type: String\r\n    },\r\n    education: {\r\n      type: [{\r\n        school: {\r\n          type: String,\r\n          required: 'School Name is a required field.'\r\n        },\r\n        degree: {\r\n          type: String,\r\n          required: 'Degree is a required field.'\r\n        },\r\n        field: {\r\n          type: String,\r\n          required: 'Field is a required field.'\r\n        },\r\n        activities: String,\r\n        startDate: {\r\n          type: Date,\r\n          required: 'Start Date is a required field.'\r\n        },\r\n        endDate: Date\r\n      }],\r\n      default: []\r\n    },\r\n    certifications: {\r\n      type: [{\r\n        name: {\r\n          type: String,\r\n          required: 'Certification Name is a required field.'\r\n        },\r\n        authority: {\r\n          type: String,\r\n          required: 'Certification Authority is a required field.'\r\n        },\r\n        startDate: Date,\r\n        endDate: Date\r\n      }]\r\n    },\r\n    languageSkills: {\r\n      type: [{\r\n        name: {\r\n          type: String,\r\n          required: 'Language is a required field.'\r\n        },\r\n        level: Number\r\n      }],\r\n      default: []\r\n    }\r\n  }, {\r\n  toJSON: {\r\n    virtuals: true\r\n  }\r\n});\r\n\r\n/**\r\n * Virtuals\r\n */\r\n\r\n// Public profile information\r\nUserSchema\r\n  .virtual('profile')\r\n  .get(function() {\r\n    return {\r\n\t  'name': this.name,\r\n    'role': this.role,\r\n    'email': this.email,\r\n\t  'position': this.currentPosition,\r\n\t  'location': this.currentLocation,\r\n\t  'social': this.social,\r\n    'picture': this.getProfilePicture(),\r\n    'isProfileComplete': this.profileComplete,\r\n    'username': this.username\r\n\r\n    };\r\n  });\r\n\r\nUserSchema\r\n  .virtual('completeProfile')\r\n  .get(function() {\r\n    return {\r\n\t  'name': this.name,\r\n    'role': this.role,\r\n    'email': this.email,\r\n    'username': this.username,\r\n\t  'position': this.currentPosition,\r\n\t  'location': this.currentLocation,\r\n\t  'social': this.social,\r\n    'picture': this.getProfilePicture(),\r\n    'languageSkills': this.languageSkills,\r\n    'certifications': this.certifications,\r\n    'education': this.education,\r\n    'summaryOfQualification': this.summaryOfQualification,\r\n    'aboutMe': this.aboutMe,\r\n    'skillsCloud': this.skillsCloud,\r\n    'experiences': this.experiences,\r\n    'hobbies': this.hobbies\r\n    };\r\n  });\r\n\r\n// Non-sensitive info we'll be putting in the token\r\nUserSchema\r\n  .virtual('token')\r\n  .get(function() {\r\n    return {\r\n      '_id': this._id,\r\n      'role': this.role\r\n    };\r\n  });\r\n\r\n/**\r\n * Validations\r\n */\r\n\r\n// Validate empty email\r\nUserSchema\r\n  .path('email')\r\n  .validate(function(email) {\r\n    if (authTypes.indexOf(this.provider) !== -1) {\r\n      return true;\r\n    }\r\n    return email.length;\r\n  }, 'Email cannot be blank');\r\n\r\nvar validatePresenceOf = function(value) {\r\n  return value && value.length;\r\n};\r\n\r\n/**\r\n * Methods\r\n */\r\nUserSchema.methods = {\r\n\r\n  /**\r\n   * Convert a Google picture url to a local one if `proxyPictureRequest` is set to TRUE.\r\n   *   Google Url: https://lh6.googleusercontent.com/-cDUEyHTb5Pk/AAAAAAAAAAI/AAAAAAAAAEA/6vTpsC0MmC4/photo.jpg?sz=50\r\n   *   Local Url: /images/profile/lh6/-cDUEyHTb5Pk/AAAAAAAAAAI/AAAAAAAAAEA/6vTpsC0MmC4/photo.jpg?sz=200\r\n   *\r\n   * @return {String}\r\n   * @api public\r\n   */\r\n  getProfilePicture: function() {\r\n    let googleData = this.google || {},\r\n        googleImage = googleData.image || {},\r\n        profilePicture = googleImage.url || '',\r\n        imagePathRegex = /^https?\\:\\/\\/([^\\.]+)\\.googleusercontent\\.com\\/([^\\?]+)(\\?(.*))?$/;\r\n\r\n    // Updating the 'sz' (size) parameter to 80 (default: sz=50)\r\n    profilePicture = profilePicture.replace(/sz\\=\\d+/, 'sz=160');\r\n\r\n    if(config.profile.proxyPictureRequest && imagePathRegex.test(profilePicture)) {\r\n      let imagePathMatch = profilePicture.match(imagePathRegex);\r\n\r\n      profilePicture = config.profile.proxyPictureUrl\r\n        .replace('{host}', imagePathMatch[1])\r\n        .replace('{imagePath}', imagePathMatch[2])\r\n        .replace('{querystring}', imagePathMatch[4] || '');\r\n    }\r\n\r\n    return profilePicture;\r\n  }\r\n};\r\n\r\nexport default mongoose.model('User', UserSchema);\r\n"],"sourceRoot":"/source/"}