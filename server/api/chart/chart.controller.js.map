{"version":3,"sources":["api/chart/chart.controller.js"],"names":["getChartTotalPerSkill","getChartExperiencePerSkill","getBenchFilter","onlyBench","$match","onBench","$exists","getSkillsFilter","skills","constructor","String","length","$in","queryReport","group","benchFilter","unwind","$unwind","skillsFilter","project","$project","username","skillsCloud","_id","query","aggregate","exec","respondData","res","data","status","json","req","$group","users","$addToSet","then","name","exp","user"],"mappings":"AAAA;;;;;;;;;;QA4CgBA,qB,GAAAA,qB;QAYAC,0B,GAAAA,0B;;AAtDhB;;;;AACA;;;;;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EAAkC;AAChC,SAAOA,YAAY,EAAEC,wCAAUC,SAAS,EAAEC,SAAS,IAAX,EAAnB,eAA+C,IAA/C,CAAF,EAAZ,GAAwE,EAAEF,QAAQ,EAAV,EAA/E;AACD;;AAED,SAASG,eAAT,CAAyBC,MAAzB,EAAgC;AAC9B,MAAG,CAACA,MAAJ,EAAW;AACT,WAAO,EAAEJ,QAAQ,EAAV,EAAP;AACD,GAFD,MAEM,IAAGI,OAAOC,WAAP,KAAuBC,MAA1B,EAAiC;AACrC,WAAO,EAAEN,QAAO,EAAE,oBAAoBI,MAAtB,EAAT,EAAP;AACD,GAFK,MAEA,IAAGA,OAAOG,MAAP,KAAkB,CAArB,EAAuB;AAC3B,WAAO,EAAEP,QAAQ,EAAV,EAAP;AACD,GAFK,MAED;AACH,WAAO,EAAEA,QAAO,EAAE,oBAAoB,EAAEQ,KAAKJ,MAAP,EAAtB,EAAT,EAAP;AACD;AACF;;AAED,SAASK,WAAT,CAAqBV,SAArB,EAAgCK,MAAhC,EAAwCM,KAAxC,EAA8C;AAC5C,MAAMC,cAAcb,eAAeC,SAAf,CAApB;;AAEA,MAAMa,SAAS;AACbC,aAAS;AADI,GAAf;AAGA,MAAMC,eAAeX,gBAAgBC,MAAhB,CAArB;;AAEA,MAAMW,UAAU;AACdC,cAAU,EAAEC,UAAU,CAAZ,EAAeC,aAAa,CAA5B,EAA+BC,KAAK,CAApC;AADI,GAAhB;;AAIA,MAAMC,QAAQ,CAACT,WAAD,EAAcC,MAAd,EAAsBE,YAAtB,EAAoCC,OAApC,EAA6CL,KAA7C,CAAd;AACA,SAAO,eAAKW,SAAL,CAAeD,KAAf,EAAsBE,IAAtB,EAAP;AACD;;AAGD,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAO,UAAUC,IAAV,EAAgB;AACrB,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB,CAAP;AACD,GAFD;AAGD;;AAEM,SAAS7B,qBAAT,CAA+BgC,GAA/B,EAAoCJ,GAApC,EAAyC;AAC9C,MAAMzB,YAAa6B,IAAIR,KAAJ,CAAUrB,SAAV,IAAwB6B,IAAIR,KAAJ,CAAUrB,SAAV,KAAwB,MAAjD,IAA6D,KAA/E;AACA,MAAMK,SAASwB,IAAIR,KAAJ,CAAUhB,MAAV,IAAoB,EAAnC;AACA,MAAMM,QAAQ;AACZmB,YAAO;AACLV,WAAK,mBADA;AAELW,aAAO,EAAEC,WAAW,WAAb;AAFF;AADK,GAAd;AAMA,SAAOtB,YAAYV,SAAZ,EAAuBK,MAAvB,EAA+BM,KAA/B,EAAsCsB,IAAtC,CAA2CT,YAAYC,GAAZ,CAA3C,CAAP;AACD;;AAEM,SAAS3B,0BAAT,CAAoC+B,GAApC,EAAyCJ,GAAzC,EAA8C;AACnD,MAAMzB,YAAa6B,IAAIR,KAAJ,CAAUrB,SAAV,IAAwB6B,IAAIR,KAAJ,CAAUrB,SAAV,KAAwB,MAAjD,IAA6D,KAA/E;AACA,MAAMK,SAASwB,IAAIR,KAAJ,CAAUhB,MAAV,IAAoB,EAAnC;AACA,MAAMM,QAAQ;AACZmB,YAAO;AACLV,WAAK,EAAEc,MAAM,mBAAR,EAA6BC,KAAK,8BAAlC,EADA;AAELJ,aAAO,EAAEC,WAAW,EAAEI,MAAM,WAAR,EAAb;AAFF;AADK,GAAd;AAMA,SAAO1B,YAAYV,SAAZ,EAAuBK,MAAvB,EAA+BM,KAA/B,EAAsCsB,IAAtC,CAA2CT,YAAYC,GAAZ,CAA3C,CAAP;AACD","file":"api/chart/chart.controller.js","sourcesContent":["'use strict';\r\n\r\nimport User from '../user/user.model';\r\nimport config from '../../config/environment';\r\n\r\nfunction getBenchFilter(onlyBench){\r\n  return onlyBench ? { $match: { onBench: { $exists: true }, onBench: true } } : { $match: { } } ;\r\n}\r\n\r\nfunction getSkillsFilter(skills){\r\n  if(!skills){\r\n    return { $match: {}};\r\n  }else if(skills.constructor === String){\r\n    return { $match:{ 'skillsCloud.name': skills }}\r\n  }else if(skills.length === 0){\r\n    return { $match: {}};\r\n  }else{\r\n    return { $match:{ 'skillsCloud.name': { $in: skills }}}\r\n  }\r\n}\r\n\r\nfunction queryReport(onlyBench, skills, group){\r\n  const benchFilter = getBenchFilter(onlyBench);\r\n\r\n  const unwind = {\r\n    $unwind: \"$skillsCloud\"          \r\n  };\r\n  const skillsFilter = getSkillsFilter(skills);\r\n\r\n  const project = {\r\n    $project: { username: 1, skillsCloud: 1, _id: 0}\r\n  };\r\n\r\n  const query = [benchFilter, unwind, skillsFilter, project, group];\r\n  return User.aggregate(query).exec();\r\n}\r\n\r\n\r\nfunction respondData(res) {\r\n  return function (data) {\r\n    return res.status(202).json(data);\r\n  };\r\n}\r\n\r\nexport function getChartTotalPerSkill(req, res) {    \r\n  const onlyBench = (req.query.onlyBench && (req.query.onlyBench === 'true')) || false;\r\n  const skills = req.query.skills || [];\r\n  const group = { \r\n    $group:{\r\n      _id: '$skillsCloud.name',\r\n      users: { $addToSet: \"$username\"},\r\n    }\r\n  };\r\n  return queryReport(onlyBench, skills, group).then(respondData(res));\r\n}\r\n\r\nexport function getChartExperiencePerSkill(req, res) {\r\n  const onlyBench = (req.query.onlyBench && (req.query.onlyBench === 'true')) || false;\r\n  const skills = req.query.skills || [];\r\n  const group = {\r\n    $group:{\r\n      _id: { name: '$skillsCloud.name', exp: '$skillsCloud.experienceYears' },\r\n      users: { $addToSet: { user: '$username' } }\r\n    }\r\n  };\r\n  return queryReport(onlyBench, skills, group).then(respondData(res));\r\n}\r\n"],"sourceRoot":"/source/"}