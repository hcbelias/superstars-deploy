{"version":3,"sources":["auth/auth.service.js"],"names":["isAuthenticated","hasRole","signToken","setTokenCookie","hasPermissionToEdit","validateJwt","secret","secrets","session","use","req","res","next","query","hasOwnProperty","headers","authorization","access_token","findById","user","_id","exec","then","status","end","catch","err","roleRequired","Error","meetsRequirements","userRoles","indexOf","role","send","id","sign","expiresIn","token","cookie","redirect","hasPermission","userData","username","message"],"mappings":"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","file":"auth/auth.service.js","sourcesContent":["'use strict';\r\n\r\nimport passport from 'passport';\r\nimport config from '../config/environment';\r\nimport jwt from 'jsonwebtoken';\r\nimport expressJwt from 'express-jwt';\r\nimport compose from 'composable-middleware';\r\nimport User from '../api/user/user.model';\r\n\r\nvar validateJwt = expressJwt({\r\n  secret: config.secrets.session\r\n});\r\n\r\n/**\r\n * Attaches the user object to the request if authenticated\r\n * Otherwise returns 403\r\n */\r\nexport function isAuthenticated() {\r\n  return compose()\r\n    // Validate jwt\r\n    .use(function(req, res, next) {\r\n      // allow access_token to be passed through query parameter as well\r\n      if (req.query && req.query.hasOwnProperty('access_token')) {\r\n        req.headers.authorization = 'Bearer ' + req.query.access_token;\r\n      }\r\n      validateJwt(req, res, next);\r\n    })\r\n    // Attach user to request\r\n    .use(function(req, res, next) {\r\n      User.findById(req.user._id).exec()\r\n        .then(user => {\r\n          if (!user) {\r\n            return res.status(401).end();\r\n          }\r\n          req.user = user;\r\n          next();\r\n          return null;\r\n        })\r\n        .catch(err => next(err));\r\n    });\r\n}\r\n\r\n/**\r\n * Checks if the user role meets the minimum requirements of the route\r\n */\r\nexport function hasRole(roleRequired) {\r\n  if (!roleRequired) {\r\n    throw new Error('Required role needs to be set');\r\n  }\r\n\r\n  return compose()\r\n    .use(isAuthenticated())\r\n    .use(function meetsRequirements(req, res, next) {\r\n      if (config.userRoles.indexOf(req.user.role) >=\r\n          config.userRoles.indexOf(roleRequired)) {\r\n        next();\r\n      } else {\r\n        res.status(403).send('Forbidden');\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * Returns a jwt token signed by the app secret\r\n */\r\nexport function signToken(id, role) {\r\n  return jwt.sign({ _id: id, role: role }, config.secrets.session, {\r\n    expiresIn: 60 * 60 * 5\r\n  });\r\n}\r\n\r\n/**\r\n * Set token cookie directly for oAuth strategies\r\n */\r\nexport function setTokenCookie(req, res) {\r\n  if (!req.user) {\r\n    return res.status(404).send('It looks like you aren\\'t logged in, please try again.');\r\n  }\r\n  var token = signToken(req.user._id, req.user.role);\r\n  res.cookie('token', token);\r\n  res.redirect('/');\r\n}\r\n\r\n\r\nexport function hasPermissionToEdit(req, res) {\r\n  return compose()\r\n    .use(isAuthenticated())\r\n    .use(function hasPermission(req, res, next) {\r\n      var userData = req.user;\r\n      if (userData.username === req.user.username || req.user.role === 'admin') {\r\n        next();\r\n      } else {\r\n        res.status(403).send({\r\n          message: 'This user does not have permission to edit other profiles.'\r\n        });\r\n      }\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}